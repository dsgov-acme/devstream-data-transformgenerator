package io.nuvalence.valueitems;

import io.nuvalence.valueitems.datatypes.DataType;
import lombok.Getter;
import lombok.NonNull;

import java.util.Stack;

@Getter
public class DataColumn {
    @NonNull
    private String name;
    @NonNull
    private DataType type;

    private Stack<DataColumn> parentColumns;

    private boolean autoGenerate;
    private boolean unique;
    private boolean nullable;
    private boolean isForeignKey;

    public DataColumn(@NonNull String name, @NonNull DataType type){
        this(name, type, false, false, true, false);
    }

    public DataColumn(@NonNull String name, @NonNull DataType type, boolean autoGenerate, boolean unique, boolean nullable, boolean isForeignKey){
        this.name = name;
        this.type = type;
        if(autoGenerate){
            if(nullable || !unique){
                throw new IllegalArgumentException("Autogenerated columns must be unique and not nullable!");
            }
        }
        this.autoGenerate = autoGenerate;
        this.nullable = nullable;
        this.unique = unique;
        this.isForeignKey = isForeignKey;
        this.parentColumns = new Stack<>();
    }

    public String getBQName(){
        return name.replace(" ", "_");
    }

    public void addParentColumn(DataColumn parent){
        this.parentColumns.push(parent);
    }
}
